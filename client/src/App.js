import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import CookieSessionManager from './utils/CookieSessionManager';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import AuthPage from './components/AuthPage';
import HomePage from './components/HomePage';
import MeetingRoom from './components/MeetingRoom';
import AudioMeetingRoom from './components/AudioMeetingRoom';

const SecureVoiceApp = () => {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const [sessionManager] = useState(() => new CookieSessionManager());
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [currentUser, setCurrentUser] = useState(null);
  const [isInitialized, setIsInitialized] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const initializeApp = async () => {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
      if (await sessionManager.hasValidSession()) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–µ–π—Å—Ç–≤—É—é—â–∞—è —Å–µ—Å—Å–∏—è');
        const userData = await sessionManager.getCurrentUser();
        console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
        if (userData && (userData.id || userData.user_id)) {
          setCurrentUser(userData);
          setIsAuthenticated(true);
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', userData.name);
        } else {
          console.log('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é');
          sessionManager.clearSession();
          setIsAuthenticated(false);
          setCurrentUser(null);
        }
      } else {
        console.log('‚ùå –î–µ–π—Å—Ç–≤—É—é—â–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        setIsAuthenticated(false);
        setCurrentUser(null);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        setIsInitialized(true);
      }, 100);
    };

    initializeApp();
  }, [sessionManager]);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    if (!isInitialized) {
    return (
        <div className="min-h-screen bg-gray-900 flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
      </div>
    );
    }

    return (
    <Router>
      <div className="App">
        <Routes>
          {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–ª–∏ –¥–∞—à–±–æ—Ä–¥ */}
          <Route 
            path="/" 
            element={
              !isAuthenticated ? (
                <AuthPage 
                  sessionManager={sessionManager}
                  setIsAuthenticated={setIsAuthenticated}
                  setCurrentUser={setCurrentUser}
                />
              ) : (
                <HomePage 
                  sessionManager={sessionManager}
                  isAuthenticated={isAuthenticated}
                  currentUser={currentUser}
                  setCurrentUser={setCurrentUser}
                  setIsAuthenticated={setIsAuthenticated}
                />
              )
            } 
          />
          
          {/* –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Å—Ç—Ä–µ—á–∏ - –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º */}
          <Route 
            path="/room/:roomId" 
            element={<MeetingRoom />} 
          />
          
          {/* –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞—É–¥–∏–æ-–≤—Å—Ç—Ä–µ—á–∏ - –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º */}
          <Route 
            path="/audio/:roomId" 
            element={<AudioMeetingRoom />} 
          />
          
          {/* –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ */}
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>
            </div>
    </Router>
  );
};

export default SecureVoiceApp;
